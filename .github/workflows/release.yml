# This workflow will build a package using Maven and then publish it to GitHub packages when a release branch is created

# 1. Triggered from the creation of a new release branch
# 2. Prepares and then releases the dependency using the maven release plugin
# 3. Creates a release using the tag produced from the release plugin (contains the auto generated release notes)
# 4. Creates a pull request to merge the release branch back into main with the bumped y-SNAPSHOT version

name: Release

on:
  push:
    branches:
      - release/*

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write

    steps:
      - name: git checkout
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml

      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      # https://maven.apache.org/maven-release/maven-release-plugin/
      - name: Publish JAR
        run: mvn -B release:prepare release:perform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/marketplace/actions/get-latest-tag
      - name: 'Get Latest tag'
        id: latest_tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.1

      # https://github:com/marketplace/actions/create-release
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.latest_tag.outputs.tag }}
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/marketplace/actions/github-pull-request-action
      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: ${{ github.event.repository.default_branch }}
          pr_title: "[Github Actions] Merge ${{ github.ref_name }} into ${{ github.event.repository.default_branch }}"
          pr_body: "Automated Pull Request"
          github_token: ${{ secrets.GITHUB_TOKEN }}